kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add CALENDAR_TRAINING.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ vi CALENDAR_TRAINING.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff
diff --git a/CALENDAR_TRAINING.txt b/CALENDAR_TRAINING.txt
index e24fa05..ed01e84 100644
--- a/CALENDAR_TRAINING.txt
+++ b/CALENDAR_TRAINING.txt
@@ -5,7 +5,7 @@ SQL BEGINNER-FEB 15-FEB 17
 TABLEAU-MAR 21- MAR 24
 SHELL SCRIPTING- MAR 27 -MAR 30
 MY SQL-MAR 31- APR 4
-
+calendar done^M

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   testingreset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git commit -m"Done"
[main 532fe47] Done
 Committer: subhashbayesetty <kbayes668@apac.comcast.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
 create mode 100644 testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log --oneline
532fe47 (HEAD -> main) Done
bcd26fe (origin/main, origin/HEAD) Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset --hard bcd26fe
HEAD is now at bcd26fe Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$





kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ echo "echo test" >> echotest.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add echotest.txt
warning: in the working copy of 'echotest.txt', LF will be replaced by CRLF the next time Git touches it

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add CALENDAR_TRAINING.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff --cached
diff --git a/CALENDAR_TRAINING.txt b/CALENDAR_TRAINING.txt
index e24fa05..ed01e84 100644
--- a/CALENDAR_TRAINING.txt
+++ b/CALENDAR_TRAINING.txt
@@ -5,7 +5,7 @@ SQL BEGINNER-FEB 15-FEB 17
 TABLEAU-MAR 21- MAR 24
 SHELL SCRIPTING- MAR 27 -MAR 30
 MY SQL-MAR 31- APR 4
-
+calendar done^M



diff --git a/echotest.txt b/echotest.txt
new file mode 100644
index 0000000..7c65052
--- /dev/null
+++ b/echotest.txt
@@ -0,0 +1 @@
+echo test

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git commit -m" all files committed"
[main 7cdb694]  all files committed
 Committer: subhashbayesetty <kbayes668@apac.comcast.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 2 insertions(+), 1 deletion(-)
 create mode 100644 echotest.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ vi echotest.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff -cached
error: invalid option: -cached

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff --cached

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff --cached

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add echotest.txt
warning: in the working copy of 'echotest.txt', LF will be replaced by CRLF the next time Git touches it

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git diff --cached
diff --git a/echotest.txt b/echotest.txt
index 7c65052..00d2ba1 100644
--- a/echotest.txt
+++ b/echotest.txt
@@ -1 +1,6 @@
 echo test
+
+this is undo test
+
+
+

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git checkout echotest.txt
Updated 0 paths from the index

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   echotest.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   echotest.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git checkout echotest.txt
Updated 1 path from the index

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ echo "this is for reset" >> reset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   echotest.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        reset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add reset.txt
warning: in the working copy of 'reset.txt', LF will be replaced by CRLF the next time Git touches it

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   echotest.txt
        new file:   reset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset HEAD reset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   echotest.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        reset.txt
        testingreset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   echotest.txt
        new file:   testingreset.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        reset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add reset.txt
warning: in the working copy of 'reset.txt', LF will be replaced by CRLF the next time Git touches it

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   echotest.txt
        new file:   reset.txt
        new file:   testingreset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset HEAD testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   echotest.txt
        new file:   reset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset HEAD -reset.txt
error: unknown switch `r'
usage: git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]
   or: git reset [-q] [<tree-ish>] [--] <pathspec>...
   or: git reset [-q] [--pathspec-from-file [--pathspec-file-nul]] [<tree-ish>]
   or: git reset --patch [<tree-ish>] [--] [<pathspec>...]
   or: DEPRECATED: git reset [-q] [--stdin [-z]] [<tree-ish>]

    -q, --quiet           be quiet, only report errors
    --no-refresh          skip refreshing the index after reset
    --mixed               reset HEAD and index
    --soft                reset only HEAD
    --hard                reset HEAD, index and working tree
    --merge               reset HEAD, index and working tree
    --keep                reset HEAD but keep local changes
    --recurse-submodules[=<reset>]
                          control recursive updating of submodules
    -p, --patch           select hunks interactively
    -N, --intent-to-add   record only the fact that removed paths will be added later
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character
    -z                    DEPRECATED (use --pathspec-file-nul instead): paths are separated with NUL character
    --stdin               DEPRECATED (use --pathspec-from-file=- instead): read paths from <stdin>


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log
commit 7cdb694d7468d2710395d54601019121c7d0dc4c (HEAD -> main)
Author: subhashbayesetty <kbayes668@apac.comcast.com>
Date:   Tue Feb 7 10:40:56 2023 +0530

     all files committed

commit bcd26fefc74a698bb2af60ef410cadf9b086af20 (origin/main, origin/HEAD)
Author: subhashbayesetty <124555082+subhashbayesetty@users.noreply.github.com>
Date:   Tue Feb 7 10:14:59 2023 +0530

    Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git commit -m"commiting done"
[main 6a4134e] commiting done
 Committer: subhashbayesetty <kbayes668@apac.comcast.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 6 insertions(+)
 create mode 100644 reset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log
commit 6a4134ea8e7d0be6c05c50e21f7165e3294d813f (HEAD -> main)
Author: subhashbayesetty <kbayes668@apac.comcast.com>
Date:   Tue Feb 7 11:48:14 2023 +0530

    commiting done

commit 7cdb694d7468d2710395d54601019121c7d0dc4c
Author: subhashbayesetty <kbayes668@apac.comcast.com>
Date:   Tue Feb 7 10:40:56 2023 +0530

     all files committed

commit bcd26fefc74a698bb2af60ef410cadf9b086af20 (origin/main, origin/HEAD)
Author: subhashbayesetty <124555082+subhashbayesetty@users.noreply.github.com>
Date:   Tue Feb 7 10:14:59 2023 +0530

    Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset ^C

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset bcd26fefc74a698bb2af60ef410cadf9b086af20
Unstaged changes after reset:
M       CALENDAR_TRAINING.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log
commit bcd26fefc74a698bb2af60ef410cadf9b086af20 (HEAD -> main, origin/main, origin/HEAD)
Author: subhashbayesetty <124555082+subhashbayesetty@users.noreply.github.com>
Date:   Tue Feb 7 10:14:59 2023 +0530

    Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$
---------------------------------------------------------------------------
--------------------------------------------------------------------

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        testingreset.txt

nothing added to commit but untracked files present (use "git add" to track)

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   testingreset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log --oneline
bcd26fe (HEAD -> main, origin/main, origin/HEAD) Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset --mixed bcd26fe

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        testingreset.txt

nothing added to commit but untracked files present (use "git add" to track)

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   testingreset.txt


kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log --oneline
bcd26fe (HEAD -> main, origin/main, origin/HEAD) Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git commit -m"Done"
[main e9afd92] Done
 Committer: subhashbayesetty <kbayes668@apac.comcast.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
 create mode 100644 testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log --oneline
e9afd92 (HEAD -> main) Done
bcd26fe (origin/main, origin/HEAD) Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset --mixed bcd26fe

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        testingreset.txt

nothing added to commit but untracked files present (use "git add" to track)

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git add testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git commit -m"Done"
[main 501e400] Done
 Committer: subhashbayesetty <kbayes668@apac.comcast.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
 create mode 100644 testingreset.txt

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log --oneline
501e400 (HEAD -> main) Done
bcd26fe (origin/main, origin/HEAD) Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git log --oneline
501e400 (HEAD -> main) Done
bcd26fe (origin/main, origin/HEAD) Add files via upload

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git reset --soft bcd26fe

kbayes668@APAC-otYihGT6el MINGW64 ~/Desktop/GIT_Training/InternTraining (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

